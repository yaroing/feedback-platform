# Generated by Django 4.2.7 on 2025-05-31 23:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('feedback_api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NLPModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('model_type', models.CharField(max_length=50, verbose_name='Type de modèle')),
                ('version', models.CharField(max_length=20, verbose_name='Version')),
                ('file', models.FileField(upload_to='nlp_models/', verbose_name='Fichier')),
                ('is_active', models.BooleanField(default=False, verbose_name='Actif')),
                ('accuracy', models.FloatField(default=0.0, verbose_name='Précision')),
                ('precision', models.FloatField(default=0.0, verbose_name='Precision')),
                ('recall', models.FloatField(default=0.0, verbose_name='Recall')),
                ('f1_score', models.FloatField(default=0.0, verbose_name='F1 Score')),
                ('training_data_size', models.IntegerField(default=0, verbose_name="Taille des données d'entraînement")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('last_trained', models.DateTimeField(blank=True, null=True, verbose_name='Dernière formation')),
            ],
            options={
                'verbose_name': 'Modèle NLP',
                'verbose_name_plural': 'Modèles NLP',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('channel_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Notification push'), ('whatsapp', 'WhatsApp'), ('webhook', 'Webhook')], max_length=20, verbose_name='Type de canal')),
                ('configuration', models.JSONField(default=dict, verbose_name='Configuration')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': 'Canal de notification',
                'verbose_name_plural': 'Canaux de notification',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nom')),
                ('color', models.CharField(default='#cccccc', max_length=7, verbose_name='Couleur')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='feedback',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='Assigné à'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='auto_categorized',
            field=models.BooleanField(default=False, verbose_name='Catégorisé automatiquement'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='confidence_score',
            field=models.FloatField(default=0.0, verbose_name='Score de confiance'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='external_id',
            field=models.CharField(blank=True, max_length=50, verbose_name='ID externe'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='latitude',
            field=models.FloatField(blank=True, null=True, verbose_name='Latitude'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='local_id',
            field=models.CharField(blank=True, max_length=100, verbose_name='ID local'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='location',
            field=models.CharField(blank=True, max_length=100, verbose_name='Localisation'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='longitude',
            field=models.FloatField(blank=True, null=True, verbose_name='Longitude'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='reference_number',
            field=models.CharField(blank=True, max_length=20, verbose_name='Numéro de référence'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='resolved_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Date de résolution'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='source_url',
            field=models.URLField(blank=True, verbose_name='URL de source'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='sync_status',
            field=models.CharField(default='SYNCED', max_length=20, verbose_name='Statut de synchronisation'),
        ),
        migrations.AlterField(
            model_name='feedback',
            name='channel',
            field=models.CharField(choices=[('web', 'Site Web'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('email', 'Email'), ('api', 'API')], default='web', max_length=20, verbose_name='Canal'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('VOLUNTEER', 'Volontaire'), ('MODERATOR', 'Modérateur'), ('COORDINATOR', 'Coordinateur'), ('ADMIN', 'Administrateur')], default='VOLUNTEER', max_length=20, verbose_name='Rôle')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Numéro de téléphone')),
                ('location', models.CharField(blank=True, max_length=100, verbose_name='Localisation')),
                ('organization', models.CharField(blank=True, max_length=100, verbose_name='Organisation')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/', verbose_name='Photo de profil')),
                ('preferred_language', models.CharField(default='fr', max_length=10, verbose_name='Langue préférée')),
                ('notification_preferences', models.JSONField(default=dict, verbose_name='Préférences de notification')),
                ('last_active', models.DateTimeField(blank=True, null=True, verbose_name='Dernière activité')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Profil utilisateur',
                'verbose_name_plural': 'Profils utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('subject', models.CharField(max_length=200, verbose_name='Sujet')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='feedback_api.notificationchannel', verbose_name='Canal')),
            ],
            options={
                'verbose_name': 'Modèle de notification',
                'verbose_name_plural': 'Modèles de notification',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('link', models.CharField(blank=True, max_length=255, verbose_name='Lien')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('sent', 'Envoyée'), ('delivered', 'Livrée'), ('read', 'Lue'), ('failed', 'Échec')], default='pending', max_length=10, verbose_name='Statut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name="Date d'envoi")),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de lecture')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='feedback_api.notificationchannel', verbose_name='Canal')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='feedback_api.notificationtemplate', verbose_name='Modèle')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NLPTrainingData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('is_validated', models.BooleanField(default=False, verbose_name='Validé')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout")),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_training_data', to=settings.AUTH_USER_MODEL, verbose_name='Ajouté par')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_data', to='feedback_api.category', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': "Donnée d'entraînement NLP",
                'verbose_name_plural': "Données d'entraînement NLP",
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='KeywordRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.JSONField(verbose_name='Mots-clés')),
                ('priority', models.CharField(blank=True, choices=[('low', 'Basse'), ('medium', 'Moyenne'), ('high', 'Haute'), ('urgent', 'Urgente')], max_length=10, null=True, verbose_name='Priorité')),
                ('confidence_boost', models.FloatField(default=0.0, verbose_name='Boost de confiance')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword_rules', to='feedback_api.category', verbose_name='Catégorie')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_keyword_rules', to=settings.AUTH_USER_MODEL, verbose_name='Créée par')),
            ],
            options={
                'verbose_name': 'Règle de mots-clés',
                'verbose_name_plural': 'Règles de mots-clés',
                'ordering': ['category__name'],
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='attachments/', verbose_name='Fichier')),
                ('file_name', models.CharField(max_length=255, verbose_name='Nom du fichier')),
                ('file_type', models.CharField(max_length=100, verbose_name='Type de fichier')),
                ('file_size', models.IntegerField(verbose_name='Taille du fichier')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'upload")),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='feedback_api.feedback', verbose_name='Feedback')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_attachments', to=settings.AUTH_USER_MODEL, verbose_name='Uploadé par')),
            ],
            options={
                'verbose_name': 'Pièce jointe',
                'verbose_name_plural': 'Pièces jointes',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Titre')),
                ('description', models.TextField(verbose_name='Description')),
                ('region', models.CharField(max_length=100, verbose_name='Région')),
                ('severity', models.CharField(choices=[('low', 'Basse'), ('medium', 'Moyenne'), ('high', 'Haute'), ('critical', 'Critique')], default='medium', max_length=10, verbose_name='Sévérité')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('pending', 'En attente'), ('sent', 'Envoyée'), ('cancelled', 'Annulée')], default='draft', max_length=10, verbose_name='Statut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name="Date d'envoi")),
                ('recipient_groups', models.CharField(blank=True, help_text='Groupes de destinataires séparés par virgule', max_length=255, verbose_name='Groupes de destinataires')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_alerts', to=settings.AUTH_USER_MODEL, verbose_name='Approuvée par')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_alerts', to=settings.AUTH_USER_MODEL, verbose_name='Créée par')),
                ('feedback', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='alert', to='feedback_api.feedback', verbose_name='Feedback')),
                ('recipients', models.ManyToManyField(blank=True, related_name='received_alerts', to=settings.AUTH_USER_MODEL, verbose_name='Destinataires')),
            ],
            options={
                'verbose_name': 'Alerte',
                'verbose_name_plural': 'Alertes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedbackTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout")),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='added_tags', to=settings.AUTH_USER_MODEL, verbose_name='Ajouté par')),
                ('feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_tags', to='feedback_api.feedback', verbose_name='Feedback')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_tags', to='feedback_api.tag', verbose_name='Tag')),
            ],
            options={
                'verbose_name': 'Tag de feedback',
                'verbose_name_plural': 'Tags de feedback',
                'unique_together': {('feedback', 'tag')},
            },
        ),
    ]
